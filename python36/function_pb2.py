# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: function.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='function.proto',
  package='baetyl',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0e\x66unction.proto\x12\x06\x62\x61\x65tyl\"\xb6\x01\n\x0eMessageRequest\x12\x0c\n\x04Name\x18\x01 \x01(\t\x12\x0e\n\x06Method\x18\x02 \x01(\t\x12\x0c\n\x04Type\x18\x03 \x01(\t\x12\x0f\n\x07Payload\x18\x04 \x01(\x0c\x12\x36\n\x08Metadata\x18\x05 \x03(\x0b\x32$.baetyl.MessageRequest.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x32\x44\n\x08\x46unction\x12\x38\n\x04\x43\x61ll\x12\x16.baetyl.MessageRequest\x1a\x16.baetyl.MessageRequest\"\x00\x62\x06proto3')
)




_MESSAGEREQUEST_METADATAENTRY = _descriptor.Descriptor(
  name='MetadataEntry',
  full_name='baetyl.MessageRequest.MetadataEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='baetyl.MessageRequest.MetadataEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='baetyl.MessageRequest.MetadataEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=162,
  serialized_end=209,
)

_MESSAGEREQUEST = _descriptor.Descriptor(
  name='MessageRequest',
  full_name='baetyl.MessageRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Name', full_name='baetyl.MessageRequest.Name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Method', full_name='baetyl.MessageRequest.Method', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Type', full_name='baetyl.MessageRequest.Type', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Payload', full_name='baetyl.MessageRequest.Payload', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='Metadata', full_name='baetyl.MessageRequest.Metadata', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MESSAGEREQUEST_METADATAENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=27,
  serialized_end=209,
)

_MESSAGEREQUEST_METADATAENTRY.containing_type = _MESSAGEREQUEST
_MESSAGEREQUEST.fields_by_name['Metadata'].message_type = _MESSAGEREQUEST_METADATAENTRY
DESCRIPTOR.message_types_by_name['MessageRequest'] = _MESSAGEREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

MessageRequest = _reflection.GeneratedProtocolMessageType('MessageRequest', (_message.Message,), dict(

  MetadataEntry = _reflection.GeneratedProtocolMessageType('MetadataEntry', (_message.Message,), dict(
    DESCRIPTOR = _MESSAGEREQUEST_METADATAENTRY,
    __module__ = 'function_pb2'
    # @@protoc_insertion_point(class_scope:baetyl.MessageRequest.MetadataEntry)
    ))
  ,
  DESCRIPTOR = _MESSAGEREQUEST,
  __module__ = 'function_pb2'
  # @@protoc_insertion_point(class_scope:baetyl.MessageRequest)
  ))
_sym_db.RegisterMessage(MessageRequest)
_sym_db.RegisterMessage(MessageRequest.MetadataEntry)


_MESSAGEREQUEST_METADATAENTRY._options = None

_FUNCTION = _descriptor.ServiceDescriptor(
  name='Function',
  full_name='baetyl.Function',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=211,
  serialized_end=279,
  methods=[
  _descriptor.MethodDescriptor(
    name='Call',
    full_name='baetyl.Function.Call',
    index=0,
    containing_service=None,
    input_type=_MESSAGEREQUEST,
    output_type=_MESSAGEREQUEST,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_FUNCTION)

DESCRIPTOR.services_by_name['Function'] = _FUNCTION

# @@protoc_insertion_point(module_scope)
